"use strict";

require("core-js/modules/web.immediate.js");
var _regeneratorRuntime = require("regenerator-runtime");
var model = _interopRequireWildcard(require("./model.js"));
var _recipeView = _interopRequireDefault(require("./view/recipeView.js"));
var _searchView = _interopRequireDefault(require("./view/searchView.js"));
var _resultsView = _interopRequireDefault(require("./view/resultsView.js"));
var _paginationView = _interopRequireDefault(require("./view/paginationView.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
//console.log(icons);

const controlRecipes = async function () {
  try {
    const hashId = window.location.hash.slice(1);
    if (!hashId) return;
    _recipeView.default.renderSpinner();

    //0) Update results view mark selected search result
    _resultsView.default.update(model.getSearchResultsPage());

    //1) Loading Recipe
    await model.loadRecipe(hashId);
    http:
    //localhost:1234/#5ed6604591c37cdc054bca3b
    //2) Rendering recipe
    _recipeView.default.render(model.state.recipe);

    //controlServings();
  } catch (e) {
    _recipeView.default.renderError();
  }
};
const controlSearchResults = async function () {
  try {
    _resultsView.default.renderSpinner();
    //1) Get search query
    const query = _searchView.default.getQuery();
    if (!query) return;

    //2) Load search results
    await model.loadSearchResults(query);

    //3) Render results
    _resultsView.default.render(model.getSearchResultsPage());

    //4) Render initial pagination buttons
    _paginationView.default.render(model.state.search);
  } catch (e) {
    console.error(e);
  }
};
const controlPagination = function (goToPage) {
  //3) Render NEW results
  _resultsView.default.render(model.getSearchResultsPage(goToPage));

  //4) Render NEW pagination buttons
  _paginationView.default.render(model.state.search);
};
const controlServings = function (newServings) {
  //Update the recipe servings (in state)
  model.updateServings(newServings);

  //Update the recipe view
  //recipeView.render(model.state.recipe);
  _recipeView.default.update(model.state.recipe);
};

//Publisher-Sucriber Pattern Implementation
const init = function () {
  _recipeView.default.addHandlerRender(controlRecipes);
  _recipeView.default.addHandlerUpdateServings(controlServings);
  _searchView.default.addHandlerSearh(controlSearchResults);
  _paginationView.default.addHandlerClick(controlPagination);
};
init();