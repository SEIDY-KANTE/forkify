"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _View = _interopRequireDefault(require("./View.js"));
var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/*
 */
class PaginationView extends _View.default {
  _parentElement = document.querySelector('.pagination');
  _generateMarkup() {
    const curPage = this._data.page;
    const numPages = Math.ceil(curPage.results.length / curPage.resultsPerPage);
    console.log(numPages);
    //Page 1, and there are other pages
    if (curPage === 1 && numPages > 1) {
      return 'Page 1, others';
    }

    //Last page
    else if (curPage === numPages && numPages > 1) {
      return `<button class="btn--inline pagination__btn--prev">
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-left"></use>
      </svg>
      <span>${curPage - 1}</span>
    </button>`;
    }
    //Other page
    else if (curPage < numPages) {
      return `
      
      <button class="btn--inline pagination__btn--prev">
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-left"></use>
      </svg>
      <span>${curPage - 1}</span>
    </button>
    
    <button class="btn--inline pagination__btn--next">
            <span>${curPage + 1}</span>
            <svg class="search__icon">
              <use href="${_icons.default}#icon-arrow-right"></use>
            </svg>
          </button>
    `;
    }

    //Page 1, and there NO other pages
    return 'Only page 1';
  }
}
var _default = new PaginationView();
exports.default = _default;